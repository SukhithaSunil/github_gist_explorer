{"version":3,"sources":["app/components/Badge/Badge.style.js","app/components/Badge/Badge.js","app/components/GistCard/GistCard.styled.js","app/components/GistCard/GistCard.js","app/components/GistResults/GistResults.styled.js","app/components/GistResults/GistResults.js","app/redux/actions/searchGistsDetails_actions.js","app/components/SearchDist/SearchDist.js","app/components/DiscoverGist/DiscoverGist.styled.js","app/components/DiscoverGist/DiscoverGist.js","app/pages/Dashboard/DashBoard.styled.js","app/pages/Dashboard/DashBoard.js","app/components/Fork/Fork.styled.js","app/components/Fork/Fork.js","app/redux/actions/singleGist_actions.js","app/pages/GistDetails/GistDetails.js","app/components/TopBar/TopBar.style.js","app/components/TopBar/TopBar.js","App.js","app/redux/reducers/searchGistsDetails_reducer.js","app/redux/reducers/singleGist_reducer.js","app/store.js","serviceWorker.js","index.js"],"names":["LanguageBadge","styled","Chip","Badge","files","languages","Object","keys","map","fileName","language","indexOf","push","Fragment","index","size","label","color","CardContentDiv","CardContent","GistLink","Link","Description","Typography","connect","state","gistList","gistsDetails","gists","gist","Grid","item","xs","sm","md","lg","Paper","variant","elevation","Card","CardHeader","avatar","Avatar","aria-label","owner","login","src","avatar_url","title","subheader","moment","utc","created_at","fromNow","component","description","CardActions","length","comments","to","pathname","id","GistResultsDiv","div","error","loading","userName","container","spacing","Array","from","Box","width","marginRight","my","Skeleton","height","pt","FETCH_GISTS_REQUEST","FETCH_GISTS_SUCCESS","FETCH_GISTS_FAILURE","CLEAR_GISTS","fetchGistsSuccess","type","fetchGistsFailure","getGistsDetails","a","url","fetch","then","response","ok","status","Error","json","data","gistDetails","JSON","parse","stringify","mapDispatchToProps","fetchGists","dispatch","console","log","message","clearGists","props","useState","setUserName","placeholder","value","onChange","name","onRequestSearch","onCancelSearch","SearchDistGrid","DiscoverGist","justify","alignItems","DashboardContainer","Container","GistDiv","DashBoard","align","paragraph","ForkBadge","ForkDetailsDiv","Fork","forks","animation","slice","fork","alt","user","href","target","style","paddingRight","FETCH_GIST_REQUEST","FETCH_GIST_SUCCESS","FETCH_GIST_FAILURE","getGistDetails","gistId","fetchGistById","singleGist","match","setGistId","useEffect","params","GitHubExplorerIcon","GitHubIcon","TopBar","CssBaseline","AppBar","position","Toolbar","noWrap","App","theme","createMuiTheme","palette","primary","main","ThemeProvider","basename","path","exact","GistDetails","initialState","configureStore","reducer","action","actions","concat","Boolean","window","location","hostname","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7904f21.chunk.js","sourcesContent":["import Chip from '@material-ui/core/Chip'\r\nimport styled from 'styled-components'\r\n\r\nexport const LanguageBadge = styled(Chip)`\r\n  margin-top: 6px;\r\n`\r\n","\r\nimport React from 'react'\r\nimport {LanguageBadge} from './Badge.style'\r\n\r\nconst Badge = ({ files }) => {\r\n  const languages = []\r\n  Object.keys(files).map((fileName) => {\r\n    const language = files[fileName].language\r\n    if (languages.indexOf(language) < 0)\r\n      languages.push(files[fileName].language)\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {languages &&\r\n        languages?.map((language, index) => (\r\n          <LanguageBadge\r\n            key={index}\r\n            size='small'\r\n            label={language}\r\n            color='secondary'\r\n          />\r\n        ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default Badge\r\n","import styled from 'styled-components'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const CardContentDiv = styled(CardContent)`\r\n  padding-bottom: 10px;\r\n`\r\n\r\nexport const GistLink = styled(Link)`\r\n  color: darksalmon;\r\n`\r\n\r\nexport const Description = styled(Typography)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\n","import Avatar from '@material-ui/core/Avatar'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment'\r\nimport CommentIcon from '@material-ui/icons/Comment'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Badge from '../Badge/Badge'\r\nimport { CardContentDiv, Description, GistLink } from './GistCard.styled'\r\n\r\nexport const GistCard = ({ gistList }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {gistList &&\r\n        gistList.map((gist, index) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={4} key={index}>\r\n            <Paper variant='outlined' elevation={3}>\r\n              <Card>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label={gist.owner.login}\r\n                      src={gist.owner.avatar_url}\r\n                    />\r\n                  }\r\n                  title={gist.owner.login}\r\n                  subheader={Object.keys(gist.files)[0]}\r\n                />\r\n\r\n                <CardContentDiv>\r\n                  <Typography color='textSecondary'>\r\n                    {`Created ${moment.utc(gist.created_at).fromNow()}`}\r\n                  </Typography>\r\n                  <Description variant='body2' component='h5'>\r\n                    {gist.description || 'No Description'}\r\n                  </Description>{' '}\r\n                  <Badge files={gist.files} />\r\n                </CardContentDiv>\r\n\r\n                <CardActions>\r\n                  <AssignmentIcon />\r\n                  <Typography variant='body2' component='p'>\r\n                    {`${Object.keys(gist.files).length} file(s)`}\r\n                  </Typography>\r\n                  <CommentIcon />\r\n                  <Typography variant='body2' component='p'>\r\n                    {`${gist.comments} comments`}\r\n                  </Typography>\r\n\r\n                  <GistLink\r\n                    to={{\r\n                      pathname: `/${gist.owner.login}/${gist.id}`,\r\n                    }}\r\n                  >\r\n                    <Typography variant='body2' component='p'>\r\n                      {'Learn More'}\r\n                    </Typography>\r\n                  </GistLink>\r\n                </CardActions>\r\n              </Card>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ gistList: state.gistsDetails.gists })\r\n\r\nexport default connect(mapStateToProps, {})(GistCard)\r\n","import styled from 'styled-components'\r\n\r\nexport const GistResultsDiv = styled.div`\r\n  display: flex !important;\r\n  justify-content: center !important;\r\n`","import Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport GistCard from '../GistCard/GistCard'\r\nimport { GistResultsDiv } from './GistResults.styled'\r\n\r\nexport const GistResults = ({ gistList, error, loading, userName }) => {\r\n  return (\r\n    <GistResultsDiv>\r\n      {gistList?.length == 0 && (\r\n        <h2>{`We couldn’t find any gists for ${userName} `}</h2>\r\n      )}\r\n\r\n      {error && <h2>{error} </h2>}\r\n\r\n      {loading &&\r\n        [1, 2, 3, 4, 5, 6].map((index) => (\r\n          <Grid container spacing={3} key={index}>\r\n            {loading &&\r\n              Array.from(new Array(3)).map((index) => (\r\n                <Box key={index} width={210} marginRight={0.5} my={5}>\r\n                  <Skeleton variant='rect' width={210} height={118} />\r\n                  <Box pt={0.5}>\r\n                    <Skeleton />\r\n                    <Skeleton width='60%' />\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n          </Grid>\r\n        ))}\r\n\r\n      {gistList?.length > 0 && (\r\n        <Grid container spacing={1}>\r\n          <GistCard />\r\n        </Grid>\r\n      )}\r\n    </GistResultsDiv>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gistList: state.gistsDetails.gists,\r\n  error: state.gistsDetails.error,\r\n  loading: state.gistsDetails.loading,\r\n  userName: state.gistsDetails.userName,\r\n})\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GistResults)\r\n","export const FETCH_GISTS_REQUEST = 'FETCH_GISTS_REQUEST'\r\nexport const FETCH_GISTS_SUCCESS = 'FETCH_GISTS_SUCCESS'\r\nexport const FETCH_GISTS_FAILURE = 'FETCH_GISTS_FAILURE'\r\nexport const CLEAR_GISTS = 'CLEAR_GISTS'\r\n\r\nexport const clearGists = () => ({\r\n  type: CLEAR_GISTS,\r\n  \r\n})\r\n\r\n\r\nexport const fetchGistsRequest = () => ({\r\n  type: FETCH_GISTS_REQUEST,\r\n})\r\n\r\nexport const fetchGistsSuccess = (userName, gists) => ({\r\n  type: FETCH_GISTS_SUCCESS,\r\n  userName,\r\n  gists,\r\n})\r\n\r\nexport const fetchGistsFailure = (userName, error) => ({\r\n  type: FETCH_GISTS_FAILURE,\r\n  userName,\r\n  error,\r\n})\r\nasync function getGistsDetails(userName) {\r\n  var url = `https://api.github.com/users/${userName}/gists`\r\n  var gistDetails\r\n  await fetch(url)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        if (response.status == 404)\r\n          throw new Error(`We couldn’t find user ${userName}`)\r\n        else if (response.status == 403)\r\n          throw new Error(`Forbidden Request. API rate limit may exceeded`)\r\n        else throw new Error(response)\r\n      }\r\n      return response.json()\r\n    })\r\n    .then((data) => {\r\n      gistDetails = JSON.parse(JSON.stringify(data))\r\n    })\r\n\r\n  return gistDetails\r\n}\r\nexport const fetchGists = (userName) => async (dispatch) => {\r\n  dispatch(fetchGistsRequest())\r\n  try {\r\n    const gistsDetails = await getGistsDetails(userName)\r\n    dispatch(fetchGistsSuccess(userName, gistsDetails))\r\n  } catch (err) {\r\n    console.log(err)\r\n    dispatch(fetchGistsFailure(userName, err.message))\r\n  }\r\n}\r\n","import SearchBar from 'material-ui-search-bar'\r\nimport React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  clearGists, fetchGists\r\n} from '../../redux/actions/searchGistsDetails_actions'\r\n\r\nexport const SearchDist = (props) => {\r\n  const [userName, setUserName] = useState(props.userName);\r\n  const searchGists = () => {\r\n    if (userName !== '') props.fetchGists(userName)\r\n  }\r\n  const clearGists = () =>{\r\n     setUserName('');\r\n    props.clearGists();\r\n  }\r\n  return (\r\n    <SearchBar\r\n      placeholder={'Search by user id'}\r\n      value={userName }\r\n      onChange={(name) => setUserName(name)}\r\n      onRequestSearch={searchGists}\r\n      onCancelSearch={clearGists}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ userName: state.gistsDetails.userName })\r\n\r\nconst mapDispatchToProps = { fetchGists, clearGists }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDist)\r\n","import styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nexport const SearchDistGrid = styled(Grid)`\r\n  margin: 0 0 40px 0;\r\n`\r\n","import Grid from '@material-ui/core/Grid'\r\nimport React from 'react'\r\nimport GistResults from '../../components/GistResults/GistResults'\r\nimport SearchDist from '../../components/SearchDist/SearchDist'\r\nimport {SearchDistGrid} from './DiscoverGist.styled'\r\n\r\n\r\nexport const DiscoverGist = (props) => {\r\n\r\n  return (\r\n    <Grid container justify='center' alignItems='center'>\r\n      <SearchDistGrid item xs={10} sm={10} md={8} lg={8}>\r\n        <SearchDist />\r\n      </SearchDistGrid>\r\n      <Grid item item xs={12} sm={12} md={12} lg={12}>\r\n        <GistResults />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default DiscoverGist\r\n","import styled from \"styled-components\";\r\nimport Container from '@material-ui/core/Container'\r\n\r\n\r\nexport const DashboardContainer = styled(Container)`\r\n  padding:40px 0 48px;\r\n`;\r\n\r\nexport const GistDiv = styled.div`\r\n  margin: 40px 40px 0 40px;\r\n`;\r\n//   &:hover {\r\n//     background-color: #5469d4;\r\n//   }","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DiscoverGist from '../../components/DiscoverGist/DiscoverGist';\r\nimport { DashboardContainer, GistDiv } from './DashBoard.styled'\r\n\r\nexport const DashBoard = (props) => {\r\n  return (\r\n    <div>\r\n      <DashboardContainer>\r\n        <Typography variant='h5' align='center' color='textSecondary' paragraph>\r\n          Discover code, notes, and snippets.\r\n        </Typography>\r\n        <GistDiv>\r\n          <DiscoverGist />\r\n        </GistDiv>\r\n      </DashboardContainer>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default DashBoard;\r\n","import styled from 'styled-components'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nexport const ForkBadge = styled(Chip)`\r\n  margin-right: 10px;\r\n`\r\n\r\nexport const ForkDetailsDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 20px;\r\n  border-radius: 20px;\r\n  background-color: black;\r\n`\r\n","import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { ForkDetailsDiv, ForkBadge } from './Fork.styled'\r\nfunction Fork({ forks, error, loading }) {\r\n  return (\r\n    <ForkDetailsDiv>\r\n      {loading &&\r\n        Array.from(new Array(3)).map((index) => (\r\n          <React.Fragment key={index}>\r\n            <Skeleton\r\n              animation='wave'\r\n              variant='circle'\r\n              width='40%'\r\n              height={40}\r\n            />\r\n            <Skeleton width='50%' animation='wave' variant='rect' />\r\n          </React.Fragment>\r\n        ))}\r\n\r\n      {forks?.length > 0 && (\r\n        <React.Fragment>\r\n          <ForkBadge\r\n            size='small'\r\n            avatar={<Avatar>F</Avatar>}\r\n            label={`Forks`}\r\n            color='primary'\r\n          />\r\n          {forks.slice(0, 3).map((fork, index) => (\r\n            <React.Fragment key={index}>\r\n              <Avatar alt={fork.user.login} src={fork.user.avatar_url} />\r\n              <a\r\n                href={`https://gist.github.com/${fork.id}`}\r\n                target='_blank'\r\n                style={{ paddingRight: '10px' }}\r\n              >\r\n                <Typography color='textPrimary'>{fork.user.login}</Typography>\r\n              </a>\r\n            </React.Fragment>\r\n          ))}\r\n        </React.Fragment>\r\n      )}\r\n\r\n      {forks?.length == 0 && (\r\n        <Typography color='textSecondary'>{'No forks'}</Typography>\r\n      )}\r\n    </ForkDetailsDiv>\r\n  )\r\n}\r\n\r\nexport default Fork\r\n","export const FETCH_GIST_REQUEST = 'FETCH_GIST_REQUEST'\r\nexport const FETCH_GIST_SUCCESS = 'FETCH_GIST_SUCCESS'\r\nexport const FETCH_GIST_FAILURE = 'FETCH_GIST_FAILURE'\r\n\r\nexport const fetchGistRequest = () => ({\r\n  type: FETCH_GIST_REQUEST,\r\n})\r\n\r\nexport const fetchGistSuccess = (gist) => ({\r\n  type: FETCH_GIST_SUCCESS,\r\n  gist,\r\n})\r\n\r\nexport const fetchGistFailure = (error) => ({\r\n  type: FETCH_GIST_FAILURE,\r\n  error,\r\n})\r\n\r\n\r\n\r\nasync function getGistDetails(gistId) {\r\n  var url = `https://api.github.com/gists/${gistId}`;\r\n  var gistDetails;\r\n  await fetch(url)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        if (response.status == 404)\r\n          throw new Error(`We couldn’t find gist`);\r\n        else throw new Error(response);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      gistDetails = JSON.parse(JSON.stringify(data));\r\n      console.log(gistDetails);\r\n    })\r\n\r\n  return gistDetails;\r\n}\r\nexport const fetchGistById = (gistId) => async (dispatch) => {\r\n  dispatch(fetchGistRequest())\r\n  try {\r\n    const gistDetails = await getGistDetails(gistId)\r\n    dispatch(fetchGistSuccess(gistDetails))\r\n  } catch (err) {\r\n    console.log(err)\r\n    dispatch(fetchGistFailure(err.message))\r\n  }\r\n}\r\n","import Grid from '@material-ui/core/Grid'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ReactEmbedGist from 'react-embed-gist'\r\nimport { connect } from 'react-redux'\r\nimport Fork from '../../components/Fork/Fork'\r\nimport { fetchGistById } from '../../redux/actions/singleGist_actions'\r\n\r\nexport const GistDetails = ({ match, fetchGistById, gist, error, loading }) => {\r\n\r\n  const [gistId, setGistId] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setGistId(`${match.params.userName}/${match.params.id}`)\r\n    fetchGistById(match.params.id)\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container justify='center' alignItems='center'>\r\n      <Grid item item xs={10} sm={10} md={6} lg={6} align='center'>\r\n        <Fork forks={gist?.forks.slice(0, 3)} loading={loading} error={error} />\r\n      </Grid>\r\n      <Grid item item xs={10} md={11} lg={10}>\r\n        {gistId && <ReactEmbedGist gist={gistId} />}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gist: state.singleGist.gist,\r\n  error: state.singleGist.error,\r\n  loading: state.singleGist.loading,\r\n})\r\n\r\nconst mapDispatchToProps = { fetchGistById }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GistDetails)\r\n","import styled from 'styled-components'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\n\r\nexport const GitHubExplorerIcon = styled(GitHubIcon)`\r\n  margin-right: 16px;\r\n`\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {GitHubExplorerIcon} from './TopBar.style';\r\n\r\nconst TopBar =()=> {\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <AppBar position='sticky'>\r\n        <Toolbar>\r\n          <GitHubExplorerIcon />\r\n          <Typography variant='h6' color='inherit' noWrap>\r\n            GitHub Gist Explorer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopBar\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport DashBoard from '../src/app/pages/Dashboard/DashBoard';\r\nimport GistDetails from '../src/app/pages/GistDetails/GistDetails';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TopBar from '../src/app/components/TopBar/TopBar';\r\n\r\nfunction App() {\r\n\r\n const theme = createMuiTheme({\r\n   palette: {\r\n     primary: {\r\n       main: '#424242',\r\n     },\r\n     type: 'dark',\r\n   },\r\n })\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <div>\r\n        <TopBar />\r\n        <Router basename='/github_gist_explorer'>\r\n          <Route path='/' exact={true} component={DashBoard} />\r\n          <Route path='/:userName/:id' component={GistDetails} />\r\n        </Router>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import * as actions from '../actions/searchGistsDetails_actions';\r\n\r\nconst initialState = {\r\n  userName: '',\r\n  gists: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default function searchGistsDetails_reducer(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actions.FETCH_GISTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        userName: '',\r\n        gists: null,\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case actions.FETCH_GISTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n        gists: [].concat(action.gists),\r\n        loading: false,\r\n        error: null,\r\n      }\r\n    case actions.FETCH_GISTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n        gists: null,\r\n        error: action.error,\r\n        loading: false,\r\n      }\r\n\r\n    case actions.CLEAR_GISTS:\r\n       return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from '../actions/singleGist_actions';\r\n\r\nconst initialState = {\r\n  gist: null,\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nexport default function singleGist_reducer(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actions.FETCH_GIST_REQUEST:\r\n      return { ...state, gist: null, loading: true, error: null }\r\n    case actions.FETCH_GIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        gist: action.gist,\r\n        loading: false,\r\n        error: null,\r\n      }\r\n    case actions.FETCH_GIST_FAILURE:\r\n      return { ...state, gist: null, error: action.error, loading: false }\r\n \r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport searchGistsDetails_reducer from '../../src/app/redux/reducers/searchGistsDetails_reducer';\r\nimport singleGist_reducer from '../../src/app/redux/reducers/singleGist_reducer'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    gistsDetails: searchGistsDetails_reducer,\r\n    singleGist: singleGist_reducer,\r\n  },\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}